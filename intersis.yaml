---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: v0.7
  title: Intersis API
  description: |
    Description of the InterSIS API

    This description can cover multiple lines.
    
    ```
    And you can put Markdown in here!
    ```

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
basePath: /v0.7
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  oauth:
    type: oauth2
    flow: implicit
    authorizationUrl: /o/authorize/?redirect_uri=CALLBACK_URI&scope=SCOPES&state=STATE&client_id=CLIENT_ID
    scopes:
      read-write: to read/modify/create any resources on a user's behalf.
      read: to read any resources on a user's behalf.
      read-rostering: |
        to read the the user's course names, course descriptions, and section rosters,
        not including student names or demographic information.
      read-student-names: read any student names or profile names on the user's behalf
      read-student-profile-names: read any student names on the user's behalf
      read-client: read user details about the client
  key:
    type: apiKey
    in: query
    name: access_token
security:
  - oauth:
    - read-write
    - read
    - read-rostering
    - read-student-names
    - read-student-profile-names
    - read-client
  - key: []

################################################################################
#                                   Parameters                                 #
################################################################################

parameters:
#                                   Path Parameters                            #
  path:
    userId:
      name: user_id
      in: path
      description: User resource identification string
      required: true
      type: string
    staffId:
      name: staff_id
      in: path
      description: Staff resource identification string
      required: true
      type: string
    studentId:
      name: student_id
      in: path
      description: Student resource identification string
      required: true
      type: string
    guardianId:
      name: guardian_id
      in: path
      description: Guardian resource identification string
      required: true
      type: string
    siteId:
      name: site_id
      in: path
      description: Site resource identification string
      required: true
      type: string
    sectionId:
      name: section_id
      in: path
      description: Section resource identification string
      required: true
      type: string
    courseId:
      name: course_id
      in: path
      description: Course resource identification string
      required: true
      type: string
    documentId:
      name: document_id
      in: path
      description: Document resource identification string
      required: true
      type: string
#                                   Relations                              #
  relations:
    site:
      required:
        in: formData
        name: site_id
        description: The id of the site
        required: true
        type: string
      unrequired:
        in: formData
        name: site_id
        description: The id of the site
        required: false
        type: string
    course:
      required:
        in: formData
        name: course_id
        description: The id of the course
        required: true
        type: string
      unrequired:
        in: formData
        name: course_id
        description: The id of the course
        required: false
        type: string
#                                   Clients                                #
  clients:
    redirect_uris:
      required:
        in: formData
        name: redirect_uris
        description: Allowed URIs list, space separated
        required: true
        type: array
        items: string
        collectionFormat: ssv
    name:
      required:
        in: formData
        name: name
        description: A unique name for your client
        required: true
        type: string
#                                   Courses                                #
  courses:
    name:
      required:
        in: formData
        name: name
        description: The name of the course
        required: true
        type: string
      unrequired:
        in: formData
        name: name
        description: The name of the course
        required: false
        type: string
    shortDescription:
      required:
        in: formData
        name: short_description
        description: The course's short description
        required: true
        type: string
      unrequired:
        in: formData
        name: short_description
        description: The course's short description
        required: false
        type: string
    longDescription:
      required:
        in: formData
        name: long_description
        description: The course's long description.
        required: true
        type: string
      unrequired:
        in: formData
        name: long_description
        description: The course's long description.
        required: false
        type: string
#                                   Documents                                  #
  documents:
    document:
      required:
        in: formData
        type: file
        name: document
        description: the document being added
        required: true
      unrequired:
        in: formData
        type: file
        name: document
        description: the document file
        required: false
    description:
      required:
        in: formData
        type: string
        name: description
        description: a short description of the document
        required: true
      unrequired:
        in: formData
        type: string
        name: description
        description: a short description of the document
        required: false
    document_type:
      required:
        in: formData
        type: string
        name: document_type
        description: The category of document being uploaded
        required: true
      unrequired:
        in: formData
        type: string
        name: document_type
        description: The category of document
        required: false
#                                   Sections                                   #
  sections:
    section_name:
      required:
        in: formData
        name: section_name
        description: The name of the course section.
        required: true
        type: string
      unrequired:
        in: formData
        name: section_name
        description: The name of the course section.
        required: false
        type: string
#                                   Guardians                                  #
  guardians:
    family_names:
      required:
        in: formData
        name: family_names
        description: The guardian's family name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: family_names
        description: The guradian's family name(s)
        required: false
        type: string
    given_names:
      required:
        in: formData
        name: given_names
        description: The guardian's given name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: given_names
        description: The guardian's given name(s)
        required: false
        type: string
    email:
      required:
        in: formData
        name: email
        description: The guardian's email address
        required: true
        type: string
      unrequired:
        in: formData
        name: email
        description: The guardian's email address
        required: false
        type: string
    hispanic_ethnicity:
      unrequired:
        in: formData
        name: hispanic_ethnicity
        description: The guardian's hispanic_ethnicity
        required: false
        type: boolean
    sex:
      required:
        in: formData
        name: sex
        description: The guardian's sex
        required: true
        type: string
        enum:
          - female
          - male
      unrequired:
        in: formData
        name: sex
        description: The guardian's sex
        required: false
        type: string
        enum:
          - female
          - male
    race:
      required:
        in: formData
        name: race
        description: The guardian's race
        required: true
        type: string
      unrequired:
        in: formData
        name: race
        description: The guardian's race
        required: false
        type: string
#                                   Sites                                      #
  sites:
    name:
      required:
        in: formData
        name: name
        description: The site name
        required: true
        type: string
      unrequired:
        in: formData
        name: name
        description: The site name
        required: false
        type: string
    address_line_1:
      required:
        in: formData
        name: address_line_1
        description: The site's street address (line 1)
        required: true
        type: string
      unrequired:
        in: formData
        name: address_line_1
        description: The site's street address (line 1)
        required: false
        type: string
    address_line_2:
      unrequired:
        in: formData
        name: address_line_2
        description: The site's street address (line 2)
        required: false
        type: string
    city:
      required:
        in: formData
        name: city
        description: The site's city
        required: true
        type: string
      unrequired:
        in: formData
        name: city
        description: The site's city
        required: false
        type: string
    postal_code:
      required:
        in: formData
        name: postal_code
        description: The site's postal code
        required: true
        type: string
      unrequired:
        in: formData
        name: postal_code
        description: The site's postal code
        required: false
        type: string

#                                   Staff                                      #
  staff:
    role:
      required:
        in: formData
        name: role
        description: The staff member's role in the organization.
        required: true
        type: string
      unrequired:
        in: formData
        name: role
        description: The staff member's role in the organization
        required: false
        type: string
    family_names:
      required:
        in: formData
        name: family_names
        description: The staff member's family name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: family_names
        description: The staff member's family name(s)
        required: false
        type: string
    given_names:
      required:
        in: formData
        name: given_names
        description: The staff member's given name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: given_names
        description: The staff member's given name(s)
        required: false
        type: string
    email:
      required:
        in: formData
        name: email
        description: The staff member's email address
        required: true
        type: string
      unrequired:
        in: formData
        name: email
        description: The staff member's email address
        required: false
        type: string
    hispanic_ethnicity:
      unrequired:
        in: formData
        name: hispanic_ethnicity
        description: The staff member's hispanic ethnicity
        required: false
        type: boolean
    sex:
      required:
        in: formData
        name: sex
        description: The staff member's sex
        required: true
        type: string
        enum:
          - female
          - male
      unrequired:
        in: formData
        name: sex
        description: The staff member's sex
        required: false
        type: string
        enum:
          - female
          - male
    race:
      unrequired:
        in: formData
        name: race
        description: The staff member's race
        required: false
        type: string
#                                   Students                                   #
  students:
    family_names:
      required:
        in: formData
        name: family_names
        description: The student's family name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: family_names
        description: The student's family name(s)
        required: false
        type: string
    given_names:
      required:
        in: formData
        name: given_names
        description: The student's given name(s)
        required: true
        type: string
      unrequired:
        in: formData
        name: given_names
        description: The student's given name(s)
        required: false
        type: string
    email:
      required:
        in: formData
        name: email
        description: The student's email address
        required: true
        type: string
      unrequired:
        in: formData
        name: email
        description: The student's email address
        required: false
        type: string
    hispanic_ethnicity:
      unrequired:
        in: formData
        name: hispanic_ethnicity
        description: The student's hispanic ethnicity
        required: false
        type: boolean
    sex:
      required:
        in: formData
        name: sex
        description: The student's sex
        required: true
        type: string
        enum:
          - female
          - male
      unrequired:
        in: formData
        name: sex
        description: The student's sex
        required: false
        type: string
        enum:
          - female
          - male
    race:
      unrequired:
        in: formData
        name: race
        description: The student's race
        required: false
        type: string
    picture:
      unrequired:
        in: formData
        name: picture
        description: The student's photo
        required: false
        type: file
      
#                                   Users                                      #
  users:
    email:
      required:
        in: formData
        name: email
        required: true
        type: string
      unrequired:
        in: formData
        name: email
        required: false
        type: string
    password:
      required:
        in: formData
        name: password
        required: true
        type: string
      unrequired:
        in: formData
        name: password
        required: false
        type: string
    new_password:
      required:
        in: formData
        name: new_password
        required: true
        type: string
      unrequired:
        in: formData
        name: new_password
        required: false
        type: string

################################################################################
#                                    Paths                                     #
################################################################################


paths:
  /clients:
    post:
      operationId: registerClient
      summary: Register an OAuth client
      description: Registers your OAuth client with the InterSIS instance.
      tags:
        - clients
      parameters:
        - $ref: '#/parameters/clients/redirect_uris/required'
        - $ref: '#/parameters/clients/name/required'
      responses:
        200:
          description: OK - The client object
          schema:
            $ref: '#/definitions/Client'
  /courses:
      get:
        operationId: listCourses
        tags:
          - courses
        summary: List Course objects
        description: List all courses available to you.
        security:
          - oauth:
            - read-rostering
        responses:
          200:
            description: OK - list of Course objects
            schema:
              type: array
              items:
                $ref: "#/definitions/Course"
      post:
        operationId: addCourse
        tags:
          - courses
        summary: Create Course object
        description: Create a new course.
        security:
          - oauth:
            - read-write
        parameters:
          - $ref: '#/parameters/courses/name/required'
          - $ref: '#/parameters/courses/shortDescription/required'
          - $ref: '#/parameters/courses/longDescription/required'
        responses:
          201:
            description: Successfully created - The course object
            schema:
              $ref: '#/definitions/Course'
          409:
            description: Cannot create - Course already exists
            schema:
              type: array
              items:
                $ref: '#/definitions/Course'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

  /courses/{course_id}:
    get:
      operationId: detailCourse
      tags:
        - courses
      summary: Get Course detail
      description: Get detail information about a course.
      security:
        - oauth:
          - read-rostering
      parameters:
        - $ref: '#/parameters/path/courseId'
      responses:
        200:
          description: OK - Course details
          schema:
            $ref: '#/definitions/Course'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      operationId: updateCourse
      tags:
        - courses
      summary: Update Course object
      description: Update information about a course.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/courseId'
        - $ref: '#/parameters/courses/name/unrequired'
        - $ref: '#/parameters/courses/shortDescription/unrequired'
        - $ref: '#/parameters/courses/longDescription/unrequired'
      responses:
        200:
          description: Successfully udpated - The course object
          schema:
            $ref: '#/definitions/Course'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteCourse
      tags:
        - courses
      summary: Deletes Course object.
      description: Deletes a course.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/courseId'
      responses:
        200:
          description: Course deleted - List of remaining courses
          schema:
          type: array
          items:
            $ref: '#/definitions/Course'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /courses/{course_id}/sections:
    get:
      operationId: courseListSections
      tags:
        - courses
      summary: Lists all Sections of a Course
      description: |
        Retrieves a list of all class sections teaching a given course
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/courseId'
      responses:
        200:
          description: OK - list of Section objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Section"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /courses/{course_id}/sections/{section_id}:
    put:
      operationId: courseAddSection
      tags:
        - courses
      summary: Adds a Section to a Course
      description: Adds a new class section to a given course
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/courseId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        201:
          description: Successfully associated - The course object
          schema:
            $ref: '#/definitions/Course'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: courseRemoveSection
      tags:
        - courses
      summary: Removes Section from Course
      description: Removes a class section from the course
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/courseId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: Successfully removed - The course object
          schema:
            $ref: '#/definitions/Course'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sections:
    get:
      operationId: listSections
      tags:
        - sections
      summary: List Section objects
      description: List all sections available to you.
      security:
        - oauth:
          - read-rostering
      responses:
        200:
          description: OK - list of Section objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Section"
    post:
      operationId: addSection
      tags:
        - sections
      summary: Create Section object
      description: Create a new section.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/sections/section_name/required'
        - $ref: '#/parameters/relations/site/required'
        - $ref: '#/parameters/relations/course/required'
      responses:
        201:
          description: Successfully created - The section object
          schema:
            $ref: '#/definitions/Section'
        409:
          description: Cannot create - Section already exists
          schema:
            type: array
            items:
              $ref: '#/definitions/Section'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sections/{section_id}:
    get:
      operationId: detailSection
      tags:
        - sections
      summary: Get Section detail
      description: Get detail information about a section.
      security:
        - oauth:
          - read-rostering
      parameters:
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: OK - Section details
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    patch:
      operationId: updateSection
      tags:
        - sections
      summary: Update Section object
      description: Update information about a section.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/sections/section_name/unrequired'
        - $ref: '#/parameters/relations/site/unrequired'
        - $ref: '#/parameters/relations/course/unrequired'
      responses:
        200:
          description: Successfully udpated - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteSection
      tags:
        - sections
      summary: Deletes Section object.
      description: Deletes a section.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/courseId'
      responses:
        200:
          description: Section deleted - List of remaining sections
          schema:
          type: array
          items:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sections/{section_id}/staff:
    get:
      operationId: sectionListStaff
      tags:
        - sections
      summary: Lists all Staff associated with Section
      description: Retrieves a list of all staff associated with a section
      security:
        - oauth:
          - read-rostering
      parameters:
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: OK - list of Staff objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Staff"

  /sections/{section_id}/staff/{staff_id}:
    put:
      operationId: sectionAddStaff
      tags:
        - sections
      summary: Associates Staff with Section
      description: Assigns a staff member to the section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/staffId'
      responses:
        201:
          description: Successfully associated - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: sectionRemoveStaff
      tags:
        - sections
      summary: Disassociate Staff from Section
      description: Removes a staff member from the section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/staffId'
      responses:
        200:
          description: Successfully removed - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sections/{section_id}/student:
    get:
      operationId: sectionListStudents
      tags:
        - sections
      summary: Lists all Students associated with Section
      description: Retrieves a list of all students associated with a section
      security:
        - oauth:
          - read-rostering
      parameters:
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: OK - list of Student objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Student"

  /sections/{section_id}/student/{student_id}:
    put:
      operationId: sectionAddStudent
      tags:
        - sections
      summary: Associates Student with Section
      description: Assigns a student to the section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/studentId'
      responses:
        201:
          description: Successfully associated - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: sectionRemoveStudent
      tags:
        - sections
      summary: Disassociate Student from Section
      description: Removes a student from the section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: Successfully removed - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /sections/{section_id}/course:
    get:
      operationId: sectionGetCourse
      tags:
        - sections
      summary: Retrieves Course associated with Section
      description: |
        Retrieves the course associated with a given class section
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: OK - Course object
          schema:
            $ref: "#/definitions/Course"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /sections/{section_id}/courses/{course_id}:
    put:
      operationId: sectionAddCourse
      tags:
        - sections
      summary: Sets Course for Section
      description: Sets the course for a given class section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/courseId'
      responses:
        201:
          description: Successfully associated - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: sectionRemoveCourse
      tags:
        - sections
      summary: Unsets Course for Section
      description: Removes the course set for a given class section
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/sectionId'
        - $ref: '#/parameters/path/courseId'
      responses:
        200:
          description: Successfully removed - The section object
          schema:
            $ref: '#/definitions/Section'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /guardians:
    get:
      operationId: listGuardians
      tags:
        - guardians
      summary: List Guardian objects
      description: Lists all Guardian objects available to you.
      security:
        - oauth:
          - read-write
          - read
      responses:
        200:
          description: OK - List of guardians
          schema:
            type: array
            items:
              $ref: "#/definitions/Guardian"
        204:
          description: No Content - No guardians available
    post:
      operationId: addGuardian
      tags:
        - guardians
      summary: Create guardian
      description: Create a guardian object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/guardians/family_names/required'
        - $ref: '#/parameters/guardians/given_names/required'
        - $ref: '#/parameters/guardians/email/unrequired'
        - $ref: '#/parameters/guardians/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/guardians/sex/required'
        - $ref: '#/parameters/guardians/race/unrequired'
      responses:
        201:
          description: Successfully created - The guardian object
          schema:
            $ref: '#/definitions/Guardian'
        409:
          description: Cannot create - Guardian already exists.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /guardians/{guardian_id}:
    get:
      operationId: detailGuardian
      tags:
        - guardians
      summary: Guardian detail
      description: Get basic information about a guardian.
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/guardianId'
      responses:
        200:
          description: OK - The guardian object
          schema:
            $ref: '#/definitions/Guardian'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
    patch:
      operationId: updateGuardian
      tags:
        - guardians
      summary: Update guardian
      description: Update information about a guardian object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/guardianId'
        - $ref: '#/parameters/guardians/family_names/unrequired'
        - $ref: '#/parameters/guardians/given_names/unrequired'
        - $ref: '#/parameters/guardians/email/unrequired'
        - $ref: '#/parameters/guardians/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/guardians/sex/unrequired'
        - $ref: '#/parameters/guardians/race/unrequired'
      responses:
        200:
          description: OK - The guardian object
          schema:
            $ref: '#/definitions/Guardian'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteGuardian
      tags:
        - guardians
      summary: Delete guardian
      description: Deletes a guardian object.
      operationId: deleteGuardian
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/guardianId'
      responses:
        200:
          description: OK - Successfully deleted - List remaining guardians.
          schema:
            type: array
            items:
              $ref: "#/definitions/Guardian"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /guardians/{guardian_id}/students:
    get:
      operationId: guardianListStudents
      tags:
        - guardians
      summary: Lists all Students associated with this Guardian
      description: |
        Retrieves a list of all students associated with a guardian
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/guardianId'
      responses:
        200:
          description: OK - list of Student objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Student"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /guardians/{guardian_id}/students/{student_id}:
    put:
      operationId: guardianAddStudent
      tags:
        - guardians
      summary: Associates Student with the Guardian
      description: Adds a student to the guardian's list
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/guardianId'
        - $ref: '#/parameters/path/studentId'
      responses:
        201:
          description: Successfully associated - The Guardian object
          schema:
            $ref: '#/definitions/Guardian'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: guardianRemoveStudent
      tags:
        - guardians
      summary: Disassociate Student from Guardian
      description: Removes a student from the guardian's list
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/guardianId'
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: Successfully removed - The Guardian object
          schema:
            $ref: '#/definitions/Guardian'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /sites:
    get:
      operationId: listSites
      tags:
        - sites
      summary: List site objects
      description: List all site objects available to you.
      security:
        - oauth:
          - read-rostering
      responses:
        200:
          description: OK - List of site objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        204:
          description: No Content - No site objects available
    post:
      operationId: addSite
      tags:
        - sites
      summary: Create site
      description: Create a new site object
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/sites/name/required'
        - $ref: '#/parameters/sites/address_line_1/unrequired'
        - $ref: '#/parameters/sites/address_line_2/unrequired'
        - $ref: '#/parameters/sites/city/unrequired'
        - $ref: '#/definitions/states'
        - $ref: '#/parameters/sites/postal_code/unrequired'
      responses:
        201:
          description: Successfully created - the Site object
          schema:
            $ref: '#/definitions/Site'
        409:
          description: Cannot create - Site already exists
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /sites/{site_id}:
    get:
      operationId: detailSite
      tags:
        - sites
      summary: Get Site detail
      description: Get detail information about a Site
      security:
        - oauth:
          - read-rostering
      parameters:
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: OK - Site details
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      operationId: updateSite
      tags:
        - sites
      summary: Update Site object
      description: Update information about a site.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
        - $ref: '#/parameters/sites/name/unrequired'
        - $ref: '#/parameters/sites/address_line_1/unrequired'
        - $ref: '#/parameters/sites/address_line_2/unrequired'
        - $ref: '#/parameters/sites/city/unrequired'
        - $ref: '#/definitions/states'
      responses:
        200:
          description: Successfully udpated - The site object
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - sites
      operationId: deleteSite
      summary: Delete site
      description: Deletes a site object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: Successfully deleted - list remaining sites
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /sites/{site_id}/staff:
    get:
      operationId: siteListStaff
      tags:
        - sites
      summary: Lists all Staff associated with this Site
      description: |
        Retrieves a list of all staff members associated with a site
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: OK - list of Staff objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Staff"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /sites/{site_id}/staff/{staff_id}:
    put:
      operationId: siteAddStaff
      tags:
        - sites
      summary: Associates Staff with Site
      description: Assigns a staff member to the site
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
        - $ref: '#/parameters/path/staffId'
      responses:
        201:
          description: Successfully associated - The site object
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: siteRemoveStaff
      tags:
        - sites
      summary: Disassociate Staff from Site
      description: Removes a staff member from the site
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
        - $ref: '#/parameters/path/staffId'
      responses:
        200:
          description: Successfully removed - The site object
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /sites/{site_id}/students:
    get:
      operationId: siteListStudents
      tags:
        - sites
      summary: Lists all Students associated with Site
      description: Retrieves a list of all students associated with the site
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: OK - list of Student objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Student"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /sites/{site_id}/students/{student_id}:
    put:
      operationId: siteAddStudent
      tags:
        - sites
      summary: Associates Student with Site
      description: Assigns a student to the site
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
        - $ref: '#/parameters/path/studentId'
      responses:
        201:
          description: Successfully associated - The site object
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: siteRemoveStudent
      tags:
        - sites
      summary: Disassociate Student from Site
      description: Removes a student from the site
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/siteId'
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: Successfully removed - The site object
          schema:
            $ref: '#/definitions/Site'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /staff:
    get:
      tags:
        - staff
      operationId: listStaff
      summary: List staff objects
      description: List all staff objects available to you.
      security:
        - oauth:
          - read-rostering
      responses:
        200:
          description: OK - List of staff objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Staff'
        204:
          description: No Content - No staff objects available
    post:
      operationId: addStaff
      tags:
        - staff
      summary: Create staff
      description: Create a new staff object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/staff/role/required'
        - $ref: '#/parameters/staff/family_names/required'
        - $ref: '#/parameters/staff/given_names/required'
        - $ref: '#/parameters/staff/email/unrequired'
        - $ref: '#/parameters/staff/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/staff/sex/required'
        - $ref: '#/parameters/staff/race/unrequired'
      responses:
        201:
          description: Successfully created - The staff object
          schema:
            $ref: '#/definitions/Staff'
        409:
          description: Cannot create - staff object already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /staff/{staff_id}:
    get:
      operationId: detailStaff
      tags:
        - staff
      summary: Staff detail
      description: Get detailed information about a staff member.
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/staffId'
      responses:
        200:
          description: OK - Staff details
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
    patch:
      operationId: updateStaff
      tags:
        - staff
      summary: Update staff object
      description: Update details about a staff object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
        - $ref: '#/parameters/staff/role/unrequired'
        - $ref: '#/parameters/staff/family_names/unrequired'
        - $ref: '#/parameters/staff/given_names/unrequired'
        - $ref: '#/parameters/staff/email/unrequired'
        - $ref: '#/parameters/staff/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/staff/sex/unrequired'
        - $ref: '#/parameters/staff/race/unrequired'
      responses:
        200:
          description: OK - The staff object
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteStaff
      tags:
        - staff
      summary: Deletes a staff member
      description: Deletes a staff object.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
      responses:
        200:
          description: Successfully deleted - list remaining staff
          schema:
            type: array
            items:
              $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /staff/{staff_id}/sections:
      get:
        operationId: staffListSections
        tags:
          - staff
        summary: Lists all Sections associated with Staff
        description: Retrieves a list of all sections associated with a staff
        security:
          - oauth:
            - read
        parameters:
          - $ref: '#/parameters/path/staffId'
        responses:
          200:
            description: OK - list of Section objects
            schema:
              type: array
              items:
                $ref: "#/definitions/Section"
          404:
            description: Unrecognized ID
            schema:
              $ref: '#/definitions/UnrecognizedID'
  /staff/{staff_id}/sections/{section_id}:
    put:
      operationId: staffAddSection
      tags:
        - staff
      summary: Associates Section with Staff
      description: Assigns a course section to the staff member
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        201:
          description: Successfully associated - The staff object
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: staffRemoveSection
      tags:
        - staff
      summary: Disassociate Section from Staff
      description: Removes a course section from the staff member
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: Successfully removed - The staff object
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /staff/{staff_id}/sites:
    get:
      operationId: staffListSites
      tags:
        - staff
      summary: Lists all Sites associated with Staff
      description: Retrieves a list of all sites associated with a staff
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/staffId'
      responses:
        200:
          description: OK - list of Site objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Site"
  /staff/{staff_id}/sites/{site_id}:
    put:
      operationId: staffAddSite
      tags:
        - staff
      summary: Associates Site to Staff
      description: Associates a site with the staff member
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
        - $ref: '#/parameters/path/siteId'
      responses:
        201:
          description: Successfully associated - the staff object
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: staffRemoveSite
      tags:
        - staff
      summary: Disassociate Site from Staff
      description: Removes a site from the staff member's sites.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/staffId'
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: Successfully removed - The staff object
          schema:
            $ref: '#/definitions/Staff'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /students:
    get:
      operationId: listStudents
      tags:
        - students
      summary: List student objects
      description: List all students available to you.
      security:
        - oauth:
          - read-rostering
      responses:
        200:
          description: OK - Student objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Student'
    post:
      operationId: addStudent
      tags:
        - students
      summary: Create student object
      description: Create a new student.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/students/family_names/required'
        - $ref: '#/parameters/students/given_names/required'
        - $ref: '#/parameters/students/email/unrequired'
        - $ref: '#/parameters/students/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/students/sex/required'
        - $ref: '#/parameters/students/race/unrequired'
        - $ref: '#/parameters/students/picture/unrequired'
      responses:
        201:
          description: Successfully created - The student object
          schema:
            $ref: '#/definitions/Student'
        409:
          description: Conflict - Student object already exists
          schema:
            $ref: '#/definitions/Student'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /students/{student_id}:
    get:
      operationId: detailStudent
      tags:
        - students
      summary: Student Detail information
      description: Get detailed information about a student.
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: OK - The Student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
    patch:
      operationId: updateStudent
      tags:
        - students
      summary: Update student object
      description: Update deatils about a student.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/students/family_names/unrequired'
        - $ref: '#/parameters/students/given_names/unrequired'
        - $ref: '#/parameters/students/email/unrequired'
        - $ref: '#/parameters/students/hispanic_ethnicity/unrequired'
        - $ref: '#/parameters/students/sex/unrequired'
        - $ref: '#/parameters/students/race/unrequired'
        - $ref: '#/parameters/students/picture/unrequired'
      responses:
        200:
          description: Successfully updated - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteStudent
      tags:
        - students
      summary: Delete Student object
      description: Deletes a student.
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: Successfully deleted - List of remaining student objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /students/{student_id}/sites:
    get:
      operationId: studentListSites
      tags:
        - students
      summary: Lists all Sites associated with this Student
      description: |
        Retrieves a list of all sites associated with a student
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: OK - list of Site objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Site"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /students/{student_id}/sites/{site_id}:
    put:
      operationId: studentAddSite
      tags:
        - students
      summary: Associates Site with Student
      description: Associates a site with this student
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/siteId'
      responses:
        201:
          description: Successfully associated - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: studentRemoveSite
      tags:
        - students
      summary: Disassociate Site from Student
      description: Disassociates a site from the student
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/siteId'
      responses:
        200:
          description: Successfully removed - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /students/{student_id}/sections:
    get:
      operationId: studentListSections
      tags:
        - students
      summary: Lists all Sections associated with this Student
      description: |
        Retrieves a list of all class sections associated with a student
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: OK - list of Section objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Section"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /students/{student_id}/sections/{section_id}:
    put:
      operationId: studentAddSection
      tags:
        - students
      summary: Associates Section with Student
      description: Assigns a class section to the student
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        201:
          description: Successfully associated - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: studentRemoveSection
      tags:
        - students
      summary: Disassociate Section from Student
      description: Removes a class section from the student's list
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/sectionId'
      responses:
        200:
          description: Successfully removed - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /students/{student_id}/guardians:
    get:
      operationId: studentListGuardians
      tags:
        - students
      summary: Lists all Guardians associated with this Student
      description: |
        Retrieves a list of all guardians associated with a student
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: OK - list of Guardian objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Guardian"
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
  
  /students/{student_id}/guardians/{guardian_id}:
    put:
      operationId: studentAddGuardian
      tags:
        - students
      summary: Associates Guardian with Student
      description: Adds a guardian to the student's list
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/guardianId'
      responses:
        201:
          description: Successfully associated - The student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: studentRemoveGuardian
      tags:
        - students
      summary: Disassociate Guardian from Student
      description: Removes a guardian from the student's list
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/guardianId'
      responses:
        200:
          description: Successfully removed - The Student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /students/{student_id}/documents:
    get:
      operationId: studentListDocuments
      tags:
        - students
      summary: Get documents for student
      description: Retrieve a list of stored documents for a given student.
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
      responses:
        200:
          description: OK - List of Document Objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
        204:
          description: No documents found for student
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
    post:
      operationId: studentAddDocument
      tags:
        - students
      summary: Upload document for student
      description: Upload a document associated with a student
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/documents/document_type/required'
        - $ref: '#/parameters/documents/description/required'
        - $ref: '#/parameters/documents/document/required'
      responses:
        201:
          description: OK Document uploaded - the document object
          schema:
            $ref: '#/definitions/Document'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /students/{student_id}/documents/{document_id}:
    get:
      operation: studentDetailDocument
      tags:
        - students
      summary: Get student document
      description: Retrieve a specific document associated with a student
      security:
        - oauth:
          - read
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/documentId'
      responses:
        200:
          description: OK - the Document Object
          schema:
            $ref: '#/definitions/Document'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      operationId: studentUpdateDocument
      tags:
        - students
      summary: Edit a student document
      description: Edit details about a document associated with a student
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/documentId'
        - $ref: '#/parameters/documents/document_type/unrequired'
        - $ref: '#/parameters/documents/description/unrequired'
        - $ref: '#/parameters/documents/document/unrequired'
      responses:
        200:
          description: OK Document updated - the Document object
          schema:
            $ref: '#/definitions/Document'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: studentDeleteDocument
      tags:
        - students
      summary: Delete a student document
      description: Delete a document associated with a student
      security:
        - oauth:
          - read-write
      parameters:
        - $ref: '#/parameters/path/studentId'
        - $ref: '#/parameters/path/documentId'
      responses:
        200:
          description: OK Document deleted - the Student object
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Unrecognized ID
          schema:
            $ref: '#/definitions/UnrecognizedID'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /whoami:
    get:
      operationId: identifyUser
      tags:
        - whoami
      summary: Get identifying user information
      description: |
        Get the user ID associated with a provided token, as well as any staff, student or guardian associated with
        the user.
      security:
        - oauth:
          - read-client
      responses:
        200:
          description: OK - User details
          schema:
            properties:
              id:
                type: string
                example: t6y4zo26vutj4xclh5hpy3sc5m
              staff:
                $ref: '#/definitions/Reference'
              student:
                $ref: '#/definitions/Reference'
              guardian:
                $ref: '#/definitions/Reference'


################################################################################
#                                 Definitions                                  #
################################################################################
definitions:

  # Models

  Client:
    description: The client accessing the API
    type: object
    required:
      - id
      - name
      - redirect_uris
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      redirect_uris:
        type: array
        items:
          type: string
      client_type:
        type: string
      authorization_grant_type:
        type: string
      client_secret:
        type: string
      name:
        type: string
        
  Course:
    description: |
      A Course (comprised of sections which are comprised of students)
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      name:
        type: string
        example: Algebra I
      short_description:
        type: string
        example: INM3 Algebra I at Example High
      long_description:
        type: string
        example: |
          Algebra I Course using Integrated New Math 3rd Edition Textbook at
          Example High School
  
  Document:
    description: A document file
    type: object
    required:
      - id
      - url
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      url:
        type: string
        format: url
        example: '/media/t6y4zo26vutj4xclh5hpy3sc5m/1044.pdf'
      document_type:
        type: string
        example: "IEP"
      description:
        type: string
        example: "John Smith's IEP"

  Guardian:
    description: Model of a guardian
    type: object
    required:
      - id
      - family_names
      - given_names
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      profile_name:
        type: string
        example: johnsmith23
      family_names:
        type: string
        example: Smith
      given_names:
        type: string
        example: John
      email:
        type: string
        example: john.smith@example.com
      hispanic_ethnicity:
        type: boolean
      sex:
        type: string
        enum:
          - female
          - male
      race:
        type: string
      user:
        type: object
        $ref: '#/definitions/User'
        students:
          type: array
          items:
            $ref: '#/definitions/Reference'
  
  Reference:
    type: object
    properties:
      uri:
        type: string
        example: /api/objects/t6y4zo26vutj4xclh5hpy3sc5m

  Section:
    type: object
    description: A course section
    required:
      - id
      - name
      - course
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      name:
        type: string
        example: Smith 1st Period Algebra I
      course:
        $ref: '#/definitions/Reference'
      students:
        type: array
        items:
          $ref: '#/definitions/Reference'
      staff:
        $ref: '#/definitions/Reference'

  Site:
    description: A school, region, or facility
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      name:
        type: string
        example: Example High School
      address_line_1:
        type: string
        example: 123 Main Street
      address_line_2:
        type: string
        example: '#47b'
      city:
        type: string
        example: Newtown
      state:
        $ref: '#/definitions/states'
      postal_code:
        type: string
        example: 55555
        
  Staff:
    description: Model of a staff member
    type: object
    required:
      - id
      - family_names
      - given_names
      - sites
      - role
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      profile_name:
        type: string
        example: johnsmith23
      family_names:
        type: string
        example: Smith
      given_names:
        type: string
        example: John
      email:
        type: string
        example: john.smith@example.com
      hispanic_ethnicity:
        type: boolean
      sex:
        type: string
        enum:
          - female
          - male
      race:
        type: string
      user:
        type: object
        $ref: '#/definitions/User'
      role:
        type: string
        example: Classroom teacher
      sites:
        type: array
        items:
          $ref: '#/definitions/Reference'
      sections:
        type: array
        items:
            $ref: '#/definitions/Reference'
  
  Student:
    description: Model of a student
    type: object
    required:
      - id
      - family_names
      - given_names
      - sites
    properties:
      id:
        type: string
        example: t6y4zo26vutj4xclh5hpy3sc5m
      profile_name:
        type: string
        example: johnsmith23
      family_names:
        type: string
        example: Smith
      given_names:
        type: string
        example: John
      email:
        type: string
        example: john.smith@example.com
      hispanic_ethnicity:
        type: boolean
      sex:
        type: string
        enum:
          - female
          - male
      race:
        type: string
      user:
        type: object
        $ref: '#/definitions/User'
      picture:
        type: string
        format: url
        example: '/media/t6y4zo26vutj4xclh5hpy3sc5m/photo.jpg'
      school_student_id:
        type: string
      state_student_id:
        type: string
      sites:
        type: array
        items:
          $ref: '#/definitions/Reference'
      sections:
        type: array
        items:
          $ref: '#/definitions/Reference'
      guardians:
        type: array
        items:
          $ref: '#/definitions/Reference'

  #errors

  UnrecognizedID:
    required:
      - error
    properties:
      error:
        type: object
        required:
          - httpStatus
          - requestedID
          - dateTime
        properties:
          httpStatus:
            type: integer
            description: 404 for unrecognizedID
            example: 404
          dateTime:
            type: string
            description: ISO format timestamp of the request
            example: 2015-09-14T09:45:19+00:00
          requestedID:
            type: string
            description: The ID not recognized
            example: t6y4zo26vutj4xclh5hpy3sc5m
          errorMessage:
            type: string
            description: (if provided) additional error information
            example: ID not found

  Error:
    required:
      - error
    properties:
      error:
        type: object
        required:
          - httpStatus
          - dateTime
        properties:
          httpStatus:
            type: integer
            description: http status code of bad request
            example: 501
          dateTime:
            type: string
            description: ISO format timestamp of the request
            example: 2015-09-14T09:14:30+00:00
          requestParameters:
            type: array
            description: parameters of the bad request
            items:
              type: array
              items:
                type: string
            example: '[[param1, 12345], [param2, 12354]]'
          errorMessage:
            type: string
            description: (if provided) additional error information
            example: Bad request

  # enums

  states:
    name: state
    type: string
    description: State
    in: formData
    enum:
      - AK
      - AL
      - AR
      - AZ
      - CA
      - CO
      - CT
      - DC
      - DE
      - FL
      - GA
      - HI
      - IA
      - ID
      - IL
      - IN
      - KS
      - KY
      - LA
      - MA
      - MD
      - ME
      - MI
      - MN
      - MO
      - MS
      - MT
      - NC
      - ND
      - NE
      - NH
      - NJ
      - NM
      - NV
      - NY
      - OH
      - OK
      - OR
      - PA
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VA
      - VT
      - WA
      - WI
      - WV
      - WY
      
  
